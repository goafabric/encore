version: "3.7"

services:
  application:
    container_name: ${_Values_root_name}-application
    image:  ${_Values_image_repository}${_Values_image_native}:${_Values_image_tag}
    restart: 'no'
    ports:
      - "${_Values_service_port}:${_Values_service_port}"
    entrypoint: ${_Values_resources_entrypoint}

    healthcheck:
      test: "curl -f http://localhost:${_Values_service_port}/actuator/health || exit 1"
      disable: ${_Values_health_check_disabled} #disabled for native images because of no curl
      interval: 10s
      timeout: 10s
      retries: 5
      
    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
      - /Users/andreas/Downloads:/Users/andreas/Downloads
    networks:
      - ${_Values_root_name}-net
    environment:
      #application
      TZ: Europe/Berlin
      server.port: "${_Values_service_port}"
      server.tomcat.threads.max: "20"
      server.forward-headers-strategy: FRAMEWORK

      #oidc
      security.authentication.enabled: "true"
      multi-tenancy.tenants: "0,5"

      spring.security.oauth2.frontend-uri: "http://127.0.0.1:30200/oidc/auth"
      spring.security.oauth2.base-uri: "http://auth-server:30200/oidc"

      #monitoring
      management.endpoint.health.show-details: always
      management.endpoints.web.exposure.include: "health,heapdump,circuitbreakers,prometheus"

      #zipkin/jaeger
      spring.application.name: "encore"
      management.zipkin.tracing.endpoint: "http://jaeger:9411/api/v2/spans"
      management.tracing.sampling.probability: "1.0"
      management.tracing.enabled: "true"
      logging.level.zipkin2.reporter: "ERROR"

      #s3
      spring.cloud.aws.s3.endpoint: "http://s3minio:9000"
      spring.cloud.aws.s3.enabled: "true"


      #log levels
      logging.level.root: "WARN"
      logging.level.org.goafabric: "INFO"
      logging.level.org.springframework: "INFO"

      # demodata
      demo-data.size: "${_Values_demo_data_size}"

  s3minio:
    container_name: s3minio
    command: server /data --console-address ':9001'
    image: quay.io/minio/minio:RELEASE.2023-01-25T00-19-54Z
    restart: 'no'
    ports:
      - 9100:9000
      - 9101:9001
    volumes:
      - miniodata:/data
    networks:
      - ${_Values_root_name}-net
    environment:
      TZ: "Europe/Berlin"

  auth-server:
    container_name: auth-server
    image: goafabric/spring-auth-server-native${_Values_server_arch}:1.0.2
    restart: 'no'
    ports:
      - "30200:30200"
    command: [ "-Xmx32M" ]
    environment:
      #application
      server.forward-headers-strategy: FRAMEWORK

      #auth
      spring.security.authorization.base-uri: "/oidc"
      spring.security.authorization.clients: "oauth2-proxy:none"
      spring.security.authorization.users: "user1:user1,user2:user2,user3:user3,user4:user4"
    networks:
      - ${_Values_root_name}-net

  jaeger:
    container_name: jaeger
    image:  jaegertracing/all-in-one:1.42.0
    restart: 'no'
    ports:
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
      - "4317:4317"
      - "4318:4318"
    environment:
      - TZ=Europe/Berlin
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - ${_Values_root_name}-net

volumes:
    tmp:
    applogs:
    miniodata:
    mongoconfig:
    mongodata:
    pgdata:

networks:
  encore-net:
    driver: bridge