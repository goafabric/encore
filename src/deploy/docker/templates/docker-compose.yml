version: "3.7"

services:
  application:
    container_name: ${_Values_root_name}-application
    image:  ${_Values_image_repository}${_Values_image_native}:${_Values_image_tag}
    restart: 'no'
    ports:
      - "${_Values_service_port}:${_Values_service_port}"
    entrypoint: ${_Values_resources_entrypoint}

    healthcheck:
      test: "curl -f http://localhost:${_Values_service_port}/actuator/health || exit 1"
      disable: ${_Values_health_check_disabled} #disabled for native images because of no curl
      interval: 10s
      timeout: 10s
      retries: 5
      
    volumes:
      - tmp:/tmp
      - applogs:/usr/share/logs
    networks:
      - ${_Values_root_name}-net
    environment:
      #application
      TZ: Europe/Berlin
      server.port: "${_Values_service_port}"
      server.tomcat.threads.max: "20"
      server.forward-headers-strategy: FRAMEWORK

      #security
      security.authentication.enabled: "false"

      #monitoring
      management.endpoint.health.show-details: always
      management.endpoints.web.exposure.include: "health,heapdump,circuitbreakers,prometheus"

      #zipkin/jaeger
      spring.application.name: "encore"
      management.zipkin.tracing.endpoint: "http://host.docker.internal:9411/api/v2/spans"
      management.tracing.sampling.probability: "1.0"
      management.tracing.enabled: "true"
      logging.level.zipkin2.reporter: "ERROR"

      #s3
      spring.cloud.aws.s3.endpoint: "http://s3minio:9000"
      spring.cloud.aws.s3.enabled: "true"

      #log levels
      logging.level.root: "WARN"
      logging.level.org.goafabric: "INFO"
      logging.level.org.springframework: "INFO"

  s3minio:
    container_name: s3minio
    command: server /data --console-address ':9001'
    image: quay.io/minio/minio:RELEASE.2023-01-25T00-19-54Z
    restart: 'no'
    ports:
      - 9100:9000
      - 9101:9001
    volumes:
      - miniodata:/data
    networks:
      - ${_Values_root_name}-net
    environment:
      TZ: "Europe/Berlin"

  nginx:
    container_name: ${_Values_root_name}-nginx
    image: nginx:1.22.1
    restart: 'no'
    ports:
      - 8080:80
    networks:
      - ${_Values_root_name}-net
    volumes:
      - ./nginx/nginx${_Values_nginx_oidc}.conf:/etc/nginx/nginx.conf
    depends_on:
      application:
        condition: service_started

volumes:
    tmp:
    applogs:
    miniodata:

networks:
  encore-net:
    driver: bridge